apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: angler-sa

---
# RBAC
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: angler-role

rules:
  # Allow creating CRDs
  #- apiGroups:
  #    - apiextensions.k8s.io
  #  resources:
  #    - customresourcedefinitions
  #  verbs: ["*"]

  - apiGroups:
    - angler-dex.github.com
    resources: ["*"]
    #- poolunit
    verbs:
    - get
    - list
    - watch

  - apiGroups:
    - "" #k8s.CoreV1Api
    resources:
    - namespaces
    verbs:
    - get
    - create
    - delete

  - apiGroups:
    - certificates.k8s.io #k8s.CertificatesV1Api
    resources:
    - certificatesigningrequests
    - certificatesigningrequests/status
    - certificatesigningrequests/approval
    verbs:
    - create
    - get
    - update

  - apiGroups:
    - certificates.k8s.io
    resources:
    - signers
    resourceNames:
        #- example.com/my-signer-name # example.com/* can be used to authorize for all signers in the 'example.com' domain
    - kubernetes.io/kube-apiserver-client
    #- kubernetes.io/legacy-unknown
    verbs:
    - approve

  - apiGroups:
    - networking.k8s.io #k8s.NetworkingV1Api
    - rbac.authorization.k8s.io #k8s.RbacAuthorizationV1Api
    - "" #k8s.CoreV1Api
    resources:
    - networkpolicies #NamespacedNetworkPolicy
    - roles #NamespacedRole
    - rolebindings #NamespacedRoleBinding
    - resourcequotas #NamespacedResourceQuota
    verbs:
    - create
    #- delete

  # To give the following permissions, angler must itself have them
  - apiGroups:
    - ""
    - apps
    - extensions
    resources:
    - deployments
    - pods
    - replicasets
    verbs:
    - "*"


---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: angler-role-binding

roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: angler-role
subjects:
  - kind: ServiceAccount
    name: angler-sa
    namespace: default

